{"ast":null,"code":"var _jsxFileName = \"C:\\\\Research\\\\client-management-frontend\\\\FrontEnd\\\\client-management-dashboard\\\\src\\\\components\\\\EditClientForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { validateClient } from '../utils/validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditClientForm = ({\n  client: initialClient,\n  onUpdate\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [client, setClient] = useState(initialClient || null);\n  const [formData, setFormData] = useState({\n    customerId: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    nationalIdNumber: '',\n    postalCode: '',\n    dateOfBirth: '',\n    streetAddress: '',\n    city: '',\n    country: '',\n    customerType: 'Individual',\n    isActive: false,\n    loyaltyNumber: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log('EditClientForm - ID from params:', id);\n    console.log('EditClientForm - Initial client:', initialClient);\n    if (initialClient) {\n      console.log('Using initial client');\n      setClient(initialClient);\n      setFormData(initialClient);\n      setLoading(false);\n    } else if (id) {\n      // Fetch client data based on ID using your API\n      const fetchClient = async () => {\n        try {\n          const url = `http://localhost:5001/clientID?ClientID=${id}`;\n          console.log('Fetching from URL:', url);\n          const response = await fetch(url);\n          console.log('Response status:', response.status);\n          console.log('Response ok:', response.ok);\n          if (response.ok) {\n            const data = await response.json();\n            console.log('Successfully fetched client data:', data);\n\n            // The API returns the data directly, not wrapped in another object\n            if (data && data.customerId) {\n              console.log('Setting client data...');\n              setClient(data);\n              setFormData({\n                customerId: data.customerId || '',\n                firstName: data.firstName || '',\n                lastName: data.lastName || '',\n                email: data.email || '',\n                phoneNumber: data.phoneNumber || '',\n                nationalIdNumber: data.nationalIdNumber || '',\n                postalCode: data.postalCode || '',\n                dateOfBirth: data.dateOfBirth || '',\n                streetAddress: data.streetAddress || '',\n                city: data.city || '',\n                country: data.country || '',\n                customerType: data.customerType || 'Individual',\n                isActive: data.isActive || false,\n                loyaltyNumber: data.loyaltyNumber || '',\n                createdAt: data.createdAt,\n                updatedAt: data.updatedAt\n              });\n              console.log('Client data set successfully');\n            } else {\n              console.log('Invalid client data structure:', data);\n              setError('Invalid client data received from server');\n            }\n          } else {\n            const errorText = await response.text();\n            console.error('HTTP error:', response.status, errorText);\n            setError(`Failed to load client data: ${response.status}`);\n          }\n        } catch (error) {\n          console.error('Fetch error:', error);\n          setError('Network error: ' + error.message);\n        } finally {\n          console.log('Setting loading to false');\n          setLoading(false);\n        }\n      };\n      fetchClient();\n    } else {\n      console.log('No ID provided');\n      setError('No client ID provided');\n      setLoading(false);\n    }\n  }, [id, initialClient]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const checked = e.target.checked;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const clientData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNumber: formData.phoneNumber,\n      idNumber: formData.nationalIdNumber,\n      postalCode: formData.postalCode,\n      dateOfBirth: formData.dateOfBirth,\n      city: formData.city\n    };\n    const validation = validateClient(clientData);\n    if (!validation.isValid) {\n      setError(validation.error);\n      return;\n    }\n    setError('');\n    try {\n      console.log('Submitting updated client data:', formData);\n      const response = await fetch(`http://localhost:5001/client`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log('Update successful');\n        if (onUpdate) {\n          onUpdate();\n        } else {\n          history.push('/');\n        }\n      } else {\n        const errorText = await response.text();\n        console.error('Update failed:', errorText);\n        setError('Failed to update client');\n      }\n    } catch (error) {\n      console.error('Update error:', error);\n      setError('Error updating client');\n    }\n  };\n  console.log('Current render state:', {\n    loading,\n    error,\n    hasClient: !!client,\n    formDataFirstName: formData.firstName\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading client data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Looking for client ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Client ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        children: \"Back to Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n  if (!client && !formData.firstName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Client not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        children: \"Back to Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Editing: \", formData.firstName, \" \", formData.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: formData.firstName || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: formData.lastName || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phoneNumber\",\n        value: formData.phoneNumber || '',\n        onChange: handleChange,\n        placeholder: \"+27XXXXXXXXX or 0XXXXXXXXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nationalIdNumber\",\n        value: formData.nationalIdNumber || '',\n        onChange: handleChange,\n        required: true,\n        maxLength: 13,\n        placeholder: \"13-digit South African ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Street Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"streetAddress\",\n        value: formData.streetAddress || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: formData.city || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Postal Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"postalCode\",\n        value: formData.postalCode || '',\n        onChange: handleChange,\n        required: true,\n        minLength: 4,\n        maxLength: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        value: formData.country || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date of Birth:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        value: formData.dateOfBirth ? formData.dateOfBirth.split('T')[0] : '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Customer Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"customerType\",\n        value: formData.customerType || 'Individual',\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Individual\",\n          children: \"Individual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Business\",\n          children: \"Business\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Loyalty Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"loyaltyNumber\",\n        value: formData.loyaltyNumber || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isActive\",\n          checked: formData.isActive || false,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), \"Active\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push('/'),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n_s(EditClientForm, \"1qKh///UAZyQFkTtErbDVOuO+8A=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditClientForm;\nexport default EditClientForm;\nvar _c;\n$RefreshReg$(_c, \"EditClientForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","validateClient","jsxDEV","_jsxDEV","EditClientForm","client","initialClient","onUpdate","_s","id","history","setClient","formData","setFormData","customerId","firstName","lastName","email","phoneNumber","nationalIdNumber","postalCode","dateOfBirth","streetAddress","city","country","customerType","isActive","loyaltyNumber","error","setError","loading","setLoading","console","log","fetchClient","url","response","fetch","status","ok","data","json","createdAt","updatedAt","errorText","text","message","handleChange","e","name","value","type","target","checked","handleSubmit","preventDefault","clientData","idNumber","validation","isValid","method","headers","body","JSON","stringify","push","hasClient","formDataFirstName","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","onSubmit","onChange","required","placeholder","maxLength","minLength","split","_c","$RefreshReg$"],"sources":["C:/Research/client-management-frontend/FrontEnd/client-management-dashboard/src/components/EditClientForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Client } from '../types/Client';\nimport { validateClient } from '../utils/validation';\n\ninterface EditClientFormProps {\n  client?: Client;\n  onUpdate?: () => void;\n}\n\nconst EditClientForm: React.FC<EditClientFormProps> = ({ client: initialClient, onUpdate }) => {\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const [client, setClient] = useState<Client | null>(initialClient || null);\n    const [formData, setFormData] = useState<Client>({\n        customerId: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: '',\n        nationalIdNumber: '',\n        postalCode: '',\n        dateOfBirth: '',\n        streetAddress: '',\n        city: '',\n        country: '',\n        customerType: 'Individual',\n        isActive: false,\n        loyaltyNumber: '',\n    });\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        console.log('EditClientForm - ID from params:', id);\n        console.log('EditClientForm - Initial client:', initialClient);\n        \n        if (initialClient) {\n            console.log('Using initial client');\n            setClient(initialClient);\n            setFormData(initialClient);\n            setLoading(false);\n        } else if (id) {\n            // Fetch client data based on ID using your API\n            const fetchClient = async () => {\n                try {\n                    const url = `http://localhost:5001/clientID?ClientID=${id}`;\n                    console.log('Fetching from URL:', url);\n                    \n                    const response = await fetch(url);\n                    console.log('Response status:', response.status);\n                    console.log('Response ok:', response.ok);\n                    \n                    if (response.ok) {\n                        const data = await response.json();\n                        console.log('Successfully fetched client data:', data);\n                        \n                        // The API returns the data directly, not wrapped in another object\n                        if (data && data.customerId) {\n                            console.log('Setting client data...');\n                            setClient(data);\n                            setFormData({\n                                customerId: data.customerId || '',\n                                firstName: data.firstName || '',\n                                lastName: data.lastName || '',\n                                email: data.email || '',\n                                phoneNumber: data.phoneNumber || '',\n                                nationalIdNumber: data.nationalIdNumber || '',\n                                postalCode: data.postalCode || '',\n                                dateOfBirth: data.dateOfBirth || '',\n                                streetAddress: data.streetAddress || '',\n                                city: data.city || '',\n                                country: data.country || '',\n                                customerType: data.customerType || 'Individual',\n                                isActive: data.isActive || false,\n                                loyaltyNumber: data.loyaltyNumber || '',\n                                createdAt: data.createdAt,\n                                updatedAt: data.updatedAt\n                            });\n                            console.log('Client data set successfully');\n                        } else {\n                            console.log('Invalid client data structure:', data);\n                            setError('Invalid client data received from server');\n                        }\n                    } else {\n                        const errorText = await response.text();\n                        console.error('HTTP error:', response.status, errorText);\n                        setError(`Failed to load client data: ${response.status}`);\n                    }\n                } catch (error) {\n                    console.error('Fetch error:', error);\n                    setError('Network error: ' + error.message);\n                } finally {\n                    console.log('Setting loading to false');\n                    setLoading(false);\n                }\n            };\n            fetchClient();\n        } else {\n            console.log('No ID provided');\n            setError('No client ID provided');\n            setLoading(false);\n        }\n    }, [id, initialClient]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value, type } = e.target;\n        const checked = (e.target as HTMLInputElement).checked;\n        setFormData({\n            ...formData,\n            [name]: type === 'checkbox' ? checked : value,\n        });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        \n        const clientData = {\n            firstName: formData.firstName,\n            lastName: formData.lastName,\n            email: formData.email,\n            phoneNumber: formData.phoneNumber,\n            idNumber: formData.nationalIdNumber,\n            postalCode: formData.postalCode,\n            dateOfBirth: formData.dateOfBirth,\n            city: formData.city\n        };\n\n        const validation = validateClient(clientData);\n        \n        if (!validation.isValid) {\n            setError(validation.error);\n            return;\n        }\n\n        setError('');\n        \n        try {\n            console.log('Submitting updated client data:', formData);\n            const response = await fetch(`http://localhost:5001/client`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            });\n            \n            if (response.ok) {\n                console.log('Update successful');\n                if (onUpdate) {\n                    onUpdate();\n                } else {\n                    history.push('/');\n                }\n            } else {\n                const errorText = await response.text();\n                console.error('Update failed:', errorText);\n                setError('Failed to update client');\n            }\n        } catch (error) {\n            console.error('Update error:', error);\n            setError('Error updating client');\n        }\n    };\n\n    console.log('Current render state:', { loading, error, hasClient: !!client, formDataFirstName: formData.firstName });\n\n    if (loading) {\n        return (\n            <div>\n                <p>Loading client data...</p>\n                <p>Looking for client ID: {id}</p>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div style={{ color: 'red' }}>\n                <p>Error: {error}</p>\n                <p>Client ID: {id}</p>\n                <button onClick={() => history.push('/')}>Back to Client List</button>\n            </div>\n        );\n    }\n\n    if (!client && !formData.firstName) {\n        return (\n            <div>\n                <p>Client not found</p>\n                <p>ID: {id}</p>\n                <button onClick={() => history.push('/')}>Back to Client List</button>\n            </div>\n        );\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Edit Client</h2>\n            <p>Editing: {formData.firstName} {formData.lastName}</p>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div>\n                <label>First Name:</label>\n                <input type=\"text\" name=\"firstName\" value={formData.firstName || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Last Name:</label>\n                <input type=\"text\" name=\"lastName\" value={formData.lastName || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" name=\"email\" value={formData.email || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Phone Number (optional):</label>\n                <input \n                    type=\"tel\" \n                    name=\"phoneNumber\" \n                    value={formData.phoneNumber || ''} \n                    onChange={handleChange} \n                    placeholder=\"+27XXXXXXXXX or 0XXXXXXXXX\"\n                />\n            </div>\n            <div>\n                <label>ID Number:</label>\n                <input \n                    type=\"text\" \n                    name=\"nationalIdNumber\" \n                    value={formData.nationalIdNumber || ''} \n                    onChange={handleChange} \n                    required \n                    maxLength={13}\n                    placeholder=\"13-digit South African ID\"\n                />\n            </div>\n            <div>\n                <label>Street Address:</label>\n                <input \n                    type=\"text\" \n                    name=\"streetAddress\" \n                    value={formData.streetAddress || ''} \n                    onChange={handleChange} \n                />\n            </div>\n            <div>\n                <label>City:</label>\n                <input type=\"text\" name=\"city\" value={formData.city || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Postal Code:</label>\n                <input \n                    type=\"text\" \n                    name=\"postalCode\" \n                    value={formData.postalCode || ''} \n                    onChange={handleChange} \n                    required \n                    minLength={4}\n                    maxLength={10}\n                />\n            </div>\n            <div>\n                <label>Country:</label>\n                <input type=\"text\" name=\"country\" value={formData.country || ''} onChange={handleChange} />\n            </div>\n            <div>\n                <label>Date of Birth:</label>\n                <input \n                    type=\"date\" \n                    name=\"dateOfBirth\" \n                    value={formData.dateOfBirth ? formData.dateOfBirth.split('T')[0] : ''} \n                    onChange={handleChange} \n                    required \n                />\n            </div>\n            <div>\n                <label>Customer Type:</label>\n                <select \n                    name=\"customerType\" \n                    value={formData.customerType || 'Individual'} \n                    onChange={handleChange} \n                    required\n                >\n                    <option value=\"Individual\">Individual</option>\n                    <option value=\"Business\">Business</option>\n                </select>\n            </div>\n            <div>\n                <label>Loyalty Number:</label>\n                <input type=\"text\" name=\"loyaltyNumber\" value={formData.loyaltyNumber || ''} onChange={handleChange} />\n            </div>\n            <div>\n                <label>\n                    <input type=\"checkbox\" name=\"isActive\" checked={formData.isActive || false} onChange={handleChange} />\n                    Active\n                </label>\n            </div>\n            <button type=\"submit\">Update Client</button>\n            <button type=\"button\" onClick={() => history.push('/')}>Cancel</button>\n        </form>\n    );\n};\n\nexport default EditClientForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}