{"ast":null,"code":"var _jsxFileName = \"C:\\\\Research\\\\client-management-frontend\\\\FrontEnd\\\\client-management-dashboard\\\\src\\\\components\\\\EditClientForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { validateClient } from '../utils/validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditClientForm = ({\n  client: initialClient,\n  onUpdate\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [client, setClient] = useState(initialClient || null);\n  const [formData, setFormData] = useState({\n    customerId: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: '',\n    nationalIdNumber: '',\n    postalCode: '',\n    dateOfBirth: '',\n    streetAddress: '',\n    city: '',\n    country: '',\n    customerType: 'Individual',\n    isActive: false,\n    loyaltyNumber: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log('EditClientForm - ID from params:', id);\n    console.log('EditClientForm - Initial client:', initialClient);\n    if (initialClient) {\n      console.log('Using initial client');\n      setClient(initialClient);\n      setFormData(initialClient);\n      setLoading(false);\n    } else if (id) {\n      // Fetch client data based on ID using your API\n      const fetchClient = async () => {\n        try {\n          const url = `http://localhost:5001/clientID?ClientID=${id}`;\n          console.log('Fetching from URL:', url);\n          const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('Response status:', response.status);\n          console.log('Response ok:', response.ok);\n          console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n\n          // Get the raw response text first to see what we're actually getting\n          const responseText = await response.text();\n          console.log('Raw response text (first 500 chars):', responseText.substring(0, 500));\n          if (response.ok) {\n            // Check if the response is actually JSON\n            if (responseText.trim().startsWith('{') || responseText.trim().startsWith('[')) {\n              try {\n                const data = JSON.parse(responseText);\n                console.log('Successfully parsed JSON data:', data);\n                if (data && data.customerId) {\n                  console.log('Setting client data...');\n                  setClient(data);\n                  setFormData({\n                    customerId: data.customerId || '',\n                    firstName: data.firstName || '',\n                    lastName: data.lastName || '',\n                    email: data.email || '',\n                    phoneNumber: data.phoneNumber || '',\n                    nationalIdNumber: data.nationalIdNumber || '',\n                    postalCode: data.postalCode || '',\n                    dateOfBirth: data.dateOfBirth || '',\n                    streetAddress: data.streetAddress || '',\n                    city: data.city || '',\n                    country: data.country || '',\n                    customerType: data.customerType || 'Individual',\n                    isActive: data.isActive || false,\n                    loyaltyNumber: data.loyaltyNumber || '',\n                    createdAt: data.createdAt,\n                    updatedAt: data.updatedAt\n                  });\n                  console.log('Client data set successfully');\n                } else {\n                  console.log('Invalid client data structure:', data);\n                  setError('Invalid client data received from server');\n                }\n              } catch (parseError) {\n                console.error('JSON parsing failed:', parseError);\n                console.error('Response was:', responseText);\n                setError('Server returned invalid JSON response');\n              }\n            } else {\n              console.error('Response is not JSON. Response starts with:', responseText.substring(0, 100));\n              setError('Server returned HTML instead of JSON. Check if backend is running correctly.');\n            }\n          } else {\n            console.error('HTTP error:', response.status, response.statusText);\n            console.error('Error response body:', responseText);\n            setError(`Failed to load client data: ${response.status} ${response.statusText}`);\n          }\n        } catch (error) {\n          console.error('Network/Fetch error:', error);\n          setError('Network error: ' + error.message);\n        } finally {\n          console.log('Setting loading to false');\n          setLoading(false);\n        }\n      };\n      fetchClient();\n    } else {\n      console.log('No ID provided');\n      setError('No client ID provided');\n      setLoading(false);\n    }\n  }, [id, initialClient]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const checked = e.target.checked;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const clientData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNumber: formData.phoneNumber,\n      idNumber: formData.nationalIdNumber,\n      postalCode: formData.postalCode,\n      dateOfBirth: formData.dateOfBirth,\n      city: formData.city\n    };\n    const validation = validateClient(clientData);\n    if (!validation.isValid) {\n      setError(validation.error);\n      return;\n    }\n    setError('');\n    try {\n      console.log('Submitting updated client data:', formData);\n      const response = await fetch(`http://localhost:5001/client`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log('Update successful');\n        if (onUpdate) {\n          onUpdate();\n        } else {\n          history.push('/');\n        }\n      } else {\n        const errorText = await response.text();\n        console.error('Update failed:', errorText);\n        setError('Failed to update client');\n      }\n    } catch (error) {\n      console.error('Update error:', error);\n      setError('Error updating client');\n    }\n  };\n  console.log('Current render state:', {\n    loading,\n    error,\n    hasClient: !!client,\n    formDataFirstName: formData.firstName\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading client data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Looking for client ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Full URL: http://localhost:5001/clientID?ClientID=\", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Check console for detailed debugging info...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Client ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Test the API directly: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:5001/clientID?ClientID=${id}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Open API URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        children: \"Back to Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this);\n  }\n  if (!client && !formData.firstName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Client not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        children: \"Back to Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Editing: \", formData.firstName, \" \", formData.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: formData.firstName || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: formData.lastName || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phoneNumber\",\n        value: formData.phoneNumber || '',\n        onChange: handleChange,\n        placeholder: \"+27XXXXXXXXX or 0XXXXXXXXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nationalIdNumber\",\n        value: formData.nationalIdNumber || '',\n        onChange: handleChange,\n        required: true,\n        maxLength: 13,\n        placeholder: \"13-digit South African ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Street Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"streetAddress\",\n        value: formData.streetAddress || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: formData.city || '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Postal Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"postalCode\",\n        value: formData.postalCode || '',\n        onChange: handleChange,\n        required: true,\n        minLength: 4,\n        maxLength: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        value: formData.country || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date of Birth:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dateOfBirth\",\n        value: formData.dateOfBirth ? formData.dateOfBirth.split('T')[0] : '',\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Customer Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"customerType\",\n        value: formData.customerType || 'Individual',\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Individual\",\n          children: \"Individual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Business\",\n          children: \"Business\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Loyalty Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"loyaltyNumber\",\n        value: formData.loyaltyNumber || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isActive\",\n          checked: formData.isActive || false,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), \"Active\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push('/'),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n_s(EditClientForm, \"1qKh///UAZyQFkTtErbDVOuO+8A=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditClientForm;\nexport default EditClientForm;\nvar _c;\n$RefreshReg$(_c, \"EditClientForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","validateClient","jsxDEV","_jsxDEV","EditClientForm","client","initialClient","onUpdate","_s","id","history","setClient","formData","setFormData","customerId","firstName","lastName","email","phoneNumber","nationalIdNumber","postalCode","dateOfBirth","streetAddress","city","country","customerType","isActive","loyaltyNumber","error","setError","loading","setLoading","console","log","fetchClient","url","response","fetch","method","headers","status","ok","Object","fromEntries","entries","responseText","text","substring","trim","startsWith","data","JSON","parse","createdAt","updatedAt","parseError","statusText","message","handleChange","e","name","value","type","target","checked","handleSubmit","preventDefault","clientData","idNumber","validation","isValid","body","stringify","push","errorText","hasClient","formDataFirstName","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","href","rel","onClick","onSubmit","onChange","required","placeholder","maxLength","minLength","split","_c","$RefreshReg$"],"sources":["C:/Research/client-management-frontend/FrontEnd/client-management-dashboard/src/components/EditClientForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Client } from '../types/Client';\nimport { validateClient } from '../utils/validation';\n\ninterface EditClientFormProps {\n  client?: Client;\n  onUpdate?: () => void;\n}\n\nconst EditClientForm: React.FC<EditClientFormProps> = ({ client: initialClient, onUpdate }) => {\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const [client, setClient] = useState<Client | null>(initialClient || null);\n    const [formData, setFormData] = useState<Client>({\n        customerId: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: '',\n        nationalIdNumber: '',\n        postalCode: '',\n        dateOfBirth: '',\n        streetAddress: '',\n        city: '',\n        country: '',\n        customerType: 'Individual',\n        isActive: false,\n        loyaltyNumber: '',\n    });\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        console.log('EditClientForm - ID from params:', id);\n        console.log('EditClientForm - Initial client:', initialClient);\n        \n        if (initialClient) {\n            console.log('Using initial client');\n            setClient(initialClient);\n            setFormData(initialClient);\n            setLoading(false);\n        } else if (id) {\n            // Fetch client data based on ID using your API\n            const fetchClient = async () => {\n                try {\n                    const url = `http://localhost:5001/clientID?ClientID=${id}`;\n                    console.log('Fetching from URL:', url);\n                    \n                    const response = await fetch(url, {\n                        method: 'GET',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json',\n                        },\n                    });\n                    \n                    console.log('Response status:', response.status);\n                    console.log('Response ok:', response.ok);\n                    console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n                    \n                    // Get the raw response text first to see what we're actually getting\n                    const responseText = await response.text();\n                    console.log('Raw response text (first 500 chars):', responseText.substring(0, 500));\n                    \n                    if (response.ok) {\n                        // Check if the response is actually JSON\n                        if (responseText.trim().startsWith('{') || responseText.trim().startsWith('[')) {\n                            try {\n                                const data = JSON.parse(responseText);\n                                console.log('Successfully parsed JSON data:', data);\n                                \n                                if (data && data.customerId) {\n                                    console.log('Setting client data...');\n                                    setClient(data);\n                                    setFormData({\n                                        customerId: data.customerId || '',\n                                        firstName: data.firstName || '',\n                                        lastName: data.lastName || '',\n                                        email: data.email || '',\n                                        phoneNumber: data.phoneNumber || '',\n                                        nationalIdNumber: data.nationalIdNumber || '',\n                                        postalCode: data.postalCode || '',\n                                        dateOfBirth: data.dateOfBirth || '',\n                                        streetAddress: data.streetAddress || '',\n                                        city: data.city || '',\n                                        country: data.country || '',\n                                        customerType: data.customerType || 'Individual',\n                                        isActive: data.isActive || false,\n                                        loyaltyNumber: data.loyaltyNumber || '',\n                                        createdAt: data.createdAt,\n                                        updatedAt: data.updatedAt\n                                    });\n                                    console.log('Client data set successfully');\n                                } else {\n                                    console.log('Invalid client data structure:', data);\n                                    setError('Invalid client data received from server');\n                                }\n                            } catch (parseError) {\n                                console.error('JSON parsing failed:', parseError);\n                                console.error('Response was:', responseText);\n                                setError('Server returned invalid JSON response');\n                            }\n                        } else {\n                            console.error('Response is not JSON. Response starts with:', responseText.substring(0, 100));\n                            setError('Server returned HTML instead of JSON. Check if backend is running correctly.');\n                        }\n                    } else {\n                        console.error('HTTP error:', response.status, response.statusText);\n                        console.error('Error response body:', responseText);\n                        setError(`Failed to load client data: ${response.status} ${response.statusText}`);\n                    }\n                } catch (error) {\n                    console.error('Network/Fetch error:', error);\n                    setError('Network error: ' + error.message);\n                } finally {\n                    console.log('Setting loading to false');\n                    setLoading(false);\n                }\n            };\n            fetchClient();\n        } else {\n            console.log('No ID provided');\n            setError('No client ID provided');\n            setLoading(false);\n        }\n    }, [id, initialClient]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value, type } = e.target;\n        const checked = (e.target as HTMLInputElement).checked;\n        setFormData({\n            ...formData,\n            [name]: type === 'checkbox' ? checked : value,\n        });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        \n        const clientData = {\n            firstName: formData.firstName,\n            lastName: formData.lastName,\n            email: formData.email,\n            phoneNumber: formData.phoneNumber,\n            idNumber: formData.nationalIdNumber,\n            postalCode: formData.postalCode,\n            dateOfBirth: formData.dateOfBirth,\n            city: formData.city\n        };\n\n        const validation = validateClient(clientData);\n        \n        if (!validation.isValid) {\n            setError(validation.error);\n            return;\n        }\n\n        setError('');\n        \n        try {\n            console.log('Submitting updated client data:', formData);\n            const response = await fetch(`http://localhost:5001/client`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            });\n            \n            if (response.ok) {\n                console.log('Update successful');\n                if (onUpdate) {\n                    onUpdate();\n                } else {\n                    history.push('/');\n                }\n            } else {\n                const errorText = await response.text();\n                console.error('Update failed:', errorText);\n                setError('Failed to update client');\n            }\n        } catch (error) {\n            console.error('Update error:', error);\n            setError('Error updating client');\n        }\n    };\n\n    console.log('Current render state:', { loading, error, hasClient: !!client, formDataFirstName: formData.firstName });\n\n    if (loading) {\n        return (\n            <div>\n                <p>Loading client data...</p>\n                <p>Looking for client ID: {id}</p>\n                <p>Full URL: http://localhost:5001/clientID?ClientID={id}</p>\n                <p>Check console for detailed debugging info...</p>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div style={{ color: 'red' }}>\n                <p>Error: {error}</p>\n                <p>Client ID: {id}</p>\n                <p>Test the API directly: <a href={`http://localhost:5001/clientID?ClientID=${id}`} target=\"_blank\" rel=\"noopener noreferrer\">Open API URL</a></p>\n                <button onClick={() => history.push('/')}>Back to Client List</button>\n            </div>\n        );\n    }\n\n    if (!client && !formData.firstName) {\n        return (\n            <div>\n                <p>Client not found</p>\n                <p>ID: {id}</p>\n                <button onClick={() => history.push('/')}>Back to Client List</button>\n            </div>\n        );\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Edit Client</h2>\n            <p>Editing: {formData.firstName} {formData.lastName}</p>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div>\n                <label>First Name:</label>\n                <input type=\"text\" name=\"firstName\" value={formData.firstName || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Last Name:</label>\n                <input type=\"text\" name=\"lastName\" value={formData.lastName || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" name=\"email\" value={formData.email || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Phone Number (optional):</label>\n                <input \n                    type=\"tel\" \n                    name=\"phoneNumber\" \n                    value={formData.phoneNumber || ''} \n                    onChange={handleChange} \n                    placeholder=\"+27XXXXXXXXX or 0XXXXXXXXX\"\n                />\n            </div>\n            <div>\n                <label>ID Number:</label>\n                <input \n                    type=\"text\" \n                    name=\"nationalIdNumber\" \n                    value={formData.nationalIdNumber || ''} \n                    onChange={handleChange} \n                    required \n                    maxLength={13}\n                    placeholder=\"13-digit South African ID\"\n                />\n            </div>\n            <div>\n                <label>Street Address:</label>\n                <input \n                    type=\"text\" \n                    name=\"streetAddress\" \n                    value={formData.streetAddress || ''} \n                    onChange={handleChange} \n                />\n            </div>\n            <div>\n                <label>City:</label>\n                <input type=\"text\" name=\"city\" value={formData.city || ''} onChange={handleChange} required />\n            </div>\n            <div>\n                <label>Postal Code:</label>\n                <input \n                    type=\"text\" \n                    name=\"postalCode\" \n                    value={formData.postalCode || ''} \n                    onChange={handleChange} \n                    required \n                    minLength={4}\n                    maxLength={10}\n                />\n            </div>\n            <div>\n                <label>Country:</label>\n                <input type=\"text\" name=\"country\" value={formData.country || ''} onChange={handleChange} />\n            </div>\n            <div>\n                <label>Date of Birth:</label>\n                <input \n                    type=\"date\" \n                    name=\"dateOfBirth\" \n                    value={formData.dateOfBirth ? formData.dateOfBirth.split('T')[0] : ''} \n                    onChange={handleChange} \n                    required \n                />\n            </div>\n            <div>\n                <label>Customer Type:</label>\n                <select \n                    name=\"customerType\" \n                    value={formData.customerType || 'Individual'} \n                    onChange={handleChange} \n                    required\n                >\n                    <option value=\"Individual\">Individual</option>\n                    <option value=\"Business\">Business</option>\n                </select>\n            </div>\n            <div>\n                <label>Loyalty Number:</label>\n                <input type=\"text\" name=\"loyaltyNumber\" value={formData.loyaltyNumber || ''} onChange={handleChange} />\n            </div>\n            <div>\n                <label>\n                    <input type=\"checkbox\" name=\"isActive\" checked={formData.isActive || false} onChange={handleChange} />\n                    Active\n                </label>\n            </div>\n            <button type=\"submit\">Update Client</button>\n            <button type=\"button\" onClick={() => history.push('/')}>Cancel</button>\n        </form>\n    );\n};\n\nexport default EditClientForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}