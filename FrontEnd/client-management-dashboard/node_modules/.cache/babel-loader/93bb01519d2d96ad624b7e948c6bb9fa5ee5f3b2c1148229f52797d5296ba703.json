{"ast":null,"code":"var _jsxFileName = \"C:\\\\Research\\\\client-management-frontend\\\\FrontEnd\\\\client-management-dashboard\\\\src\\\\pages\\\\ClientListPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ClientList from '../components/ClientList';\nimport SearchBar from '../components/SearchBar';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientListPage = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [clientsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Fetch clients from an API or local data source\n    const fetchClients = async () => {\n      // Replace with actual data fetching logic\n      const response = await fetch('/api/clients');\n      const data = await response.json();\n      setClients(data);\n    };\n    fetchClients();\n  }, []);\n  const filteredClients = clients.filter(client => client.firstName.toLowerCase().includes(searchTerm.toLowerCase()) || client.lastName.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastClient = currentPage * clientsPerPage;\n  const indexOfFirstClient = indexOfLastClient - clientsPerPage;\n  const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\n  const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleEditClient = client => {\n    // Navigate to edit page\n    window.location.href = `/edit/${client.id || client.customerId}`;\n  };\n  const handleDeleteClient = id => {\n    // Implement delete logic\n    console.log('Delete client:', id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearchChange: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClientList, {\n      clients: currentClients,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: paginate,\n      onEditClient: handleEditClient,\n      onDeleteClient: handleDeleteClient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientListPage, \"vyll1dCV7pc7zAgtYyxVur/itnc=\");\n_c = ClientListPage;\nexport default ClientListPage;\nvar _c;\n$RefreshReg$(_c, \"ClientListPage\");","map":{"version":3,"names":["React","useEffect","useState","ClientList","SearchBar","Pagination","jsxDEV","_jsxDEV","ClientListPage","_s","clients","setClients","currentPage","setCurrentPage","clientsPerPage","searchTerm","setSearchTerm","fetchClients","response","fetch","data","json","filteredClients","filter","client","firstName","toLowerCase","includes","lastName","indexOfLastClient","indexOfFirstClient","currentClients","slice","totalPages","Math","ceil","length","paginate","pageNumber","handleEditClient","window","location","href","id","customerId","handleDeleteClient","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","onPageChange","onEditClient","onDeleteClient","_c","$RefreshReg$"],"sources":["C:/Research/client-management-frontend/FrontEnd/client-management-dashboard/src/pages/ClientListPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ClientList from '../components/ClientList';\nimport SearchBar from '../components/SearchBar';\nimport Pagination from '../components/Pagination';\nimport { Client } from '../types/Client';\n\nconst ClientListPage: React.FC = () => {\n    const [clients, setClients] = useState<Client[]>([]);\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [clientsPerPage] = useState<number>(10);\n    const [searchTerm, setSearchTerm] = useState<string>('');\n\n    useEffect(() => {\n        // Fetch clients from an API or local data source\n        const fetchClients = async () => {\n            // Replace with actual data fetching logic\n            const response = await fetch('/api/clients');\n            const data = await response.json();\n            setClients(data);\n        };\n\n        fetchClients();\n    }, []);\n\n    const filteredClients = clients.filter(client =>\n        client.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        client.lastName.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    const indexOfLastClient = currentPage * clientsPerPage;\n    const indexOfFirstClient = indexOfLastClient - clientsPerPage;\n    const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\n\n    const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\n\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    const handleEditClient = (client: Client) => {\n        // Navigate to edit page\n        window.location.href = `/edit/${client.id || client.customerId}`;\n    };\n\n    const handleDeleteClient = (id: string) => {\n        // Implement delete logic\n        console.log('Delete client:', id);\n    };\n\n    return (\n        <div>\n            <h1>Client Management</h1>\n            <SearchBar searchTerm={searchTerm} onSearchChange={setSearchTerm} />\n            <ClientList \n                clients={currentClients}\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={paginate}\n                onEditClient={handleEditClient}\n                onDeleteClient={handleDeleteClient}\n            />\n            <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={paginate}\n            />\n        </div>\n    );\n};\n\nexport default ClientListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}